<!-- Swiper JS -->
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

{% assign selected_product = product.selected_or_first_available_variant %}

<style>
  .mySwiper,
  .mySwiper2 {
    display: none;
  }

  .swiper {
    width: 100%;
    height: 300px;
    margin-left: auto;
    margin-right: auto;
  }

  .swiper-slide {
    background-size: cover;
    background-position: center;
  }

  .mySwiper2 {
    height: 80%;
    width: 100%;
  }

  .mySwiper {
    height: 20%;
    box-sizing: border-box;
    padding: 10px 0;
  }

  .mySwiper .swiper-slide {
    width: 25%;
    height: 100%;
    opacity: 0.4;
  }

  .mySwiper .swiper-slide-thumb-active {
    opacity: 1;
  }

  .swiper-slide img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .mySwiper iframe,
  .mySwiper video {
    height: 100%;
    pointer-events: none;
  }

  .mySwiper2 iframe,
  .mySwiper2 video {
    height: 100%;
  }

  .swiper-button-next,
  .swiper-button-prev {
    display: none;
  }
</style>


<div class="max-w-6xl mx-auto mt-8 py-4 px-4">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-10">
    <div>

      <div class="swiper mySwiper2">
        <div class="swiper-wrapper">
          {% for media in product.media %}
            <div class="swiper-slide">
              {% render 'product-media'
                , media: media %}
            </div>
          {% endfor %}
        </div>
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
      </div>

      <div thumbsSlider="" class="swiper mySwiper">
        <div class="swiper-wrapper">
          {% for media in product.media %}
            <div class="swiper-slide">
              {% render 'product-media'
                , media: media %}
            </div>
          {% endfor %}
        </div>
      </div>

    </div>

    <div>
      {% form 'product'
        , product
        , id: 'product-form'
        , novalidate: "novalidate" %}
        {% for block in section.blocks %}
          {% case block.type %}
            {% when "vendor" %}
              <p class="text-gray-500">{{ product.vendor }}</p>

            {% when "title" %}
              <h1 class="text-3xl font-bold mt-4">{{ product.title }}</h1>

            {% when "price" %}
              <div class="flex gap-3 items-center mt-4" id="price-{{ section.id }}">
                {% if selected_product.compare_at_price %}
                  <span class="line-through">{{ selected_product.compare_at_price | money }}</span>
                {% endif %}

                <span class="font-bold">{{ selected_product.price | money }}</span>

                {% if selected_product.compare_at_price > selected_product.price %}
                  <span class="inline-block py-1 px-5 text-white text-sm bg-red-600 rounded-2xl">Sale</span>
                {% endif %}
              </div>

            {% when "variants" %}
              <div class="mt-4">
                <input
                  type="hidden"
                  name="id"
                  value="{{ selected_product.id }}">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <p class="mt-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2 text-left" for="option-{{ forloop.index0 }}">{{ option.name }}</label>
                        <select
                          class="shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-dashed focus:shadow-outline"
                          name="{{option.name }}"
                          id="option-{{ forloop.index0 }}">
                          {% for value in option.values %}
                            <option
                              value="{{ value }}"
                              {% if option.selected_value == value %}
                              selected="selected"
                              {% endif %}>{{ value }}</option>
                          {% endfor %}
                        </select>
                      </p>

                      <script type="application/json">
                        {{ product.variants |  json }}
                      </script>
                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>


            {% when "quantity" %}
              <p class="mt-4 w-20">
                <label class="block text-gray-700 text-sm font-bold mb-2 text-left" for="Quantity">Quantity</label>
                <input
                  class="shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-dashed focus:shadow-outline"
                  type="number"
                  id="Quantity"
                  name="quantity"
                  value="1"
                  min="1">
              </p>

            {% when "description" %}
              <p class="mt-4">
                {{ product.description }}
              </p>

            {% when "add_to_cart" %}
              <button
                class="form-submit-btn bg-gray-900 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mt-4 disabled:bg-gray-500 disabled:pointer-events-none"
                type="submit"
                {% if selected_product.available == false %}
                disabled
                {% endif %}>
                {% if selected_product.available == false %}
                  Sold out
                {% else %}
                  Add to cart
                {% endif %}
              </button>

          {% else %}
            {% endcase %}

          {% endfor %}
        {% endform %}


      </div>
    </div>
  </div>


  <script>
    class VariantSelector extends HTMLElement {
      constructor() {
        super();
        this.addEventListener("change", this.onVariantChange);
      }

      onVariantChange() {
        this.getSelectedOptions();
        this.getSelectedVariant();
        this.updateUrl();
        this.updateFormID();
        this.updateSubmitBtn();
        this.updatePrice();
      }

      getSelectedOptions() {
        this.options = Array.from(this.querySelectorAll("select"), (select) => select.value);
      }

      getVariantJSON() {
        this.variandData = this.variandData 
        || JSON.parse(this.querySelector('script[type="application/json"]').textContent);

        return this.variandData;
      }

      getSelectedVariant() {
        const selectedProductTitle = this.options.join(' / ');

        this.selectedVariant = this.getVariantJSON().find(variant => variant.title === selectedProductTitle);

        return this.selectedVariant;
      }

      updateUrl() {
        window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.selectedVariant.id}`);
      }

      updateFormID() {
        const formInput = document.querySelector('#product-form input[name="id"]')
        formInput.value = this.selectedVariant.id;
      }

      updatePrice() {
        fetch(`${this.dataset.url}?variant=${this.selectedVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
            const id = `price-${this.dataset.section}`;
  
            const html = new DOMParser().parseFromString(responseText, 'text/html');

            const oldPrice = document.getElementById(id);

            const newPrice = html.getElementById(id);

            if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
        }

      updateSubmitBtn() {
        const submitBtn = document.querySelector('.form-submit-btn');

        if(this.selectedVariant.available === false) {
          submitBtn.setAttribute('disabled', true);
          submitBtn.textContent = 'Sold out';
        } else {
          submitBtn.removeAttribute('disabled');
          submitBtn.textContent = 'Add to cart';
        }
      }
    }


    customElements.define("variant-selector", VariantSelector);
  </script>
  <!-- Initialize Swiper -->
  <script>
    const interval = setInterval(() => {
      if(!window?.Swiper) return;

      const swiper = new Swiper(".mySwiper", {
        // loop: true,
        spaceBetween: 10,
        slidesPerView: 4,
        freeMode: true,
        watchSlidesProgress: true,
        navigation: false
      });
      
      const swiper2 = new Swiper(".mySwiper2", {
        // loop: true,
        spaceBetween: 10,
        thumbs: {
          swiper: swiper,
        },
      });

      document.querySelector('.mySwiper2').style.display = 'block';
      document.querySelector('.mySwiper').style.display = 'block';

      clearInterval(interval);
    }, 100)
  </script>

  {% schema %}
    {
      "name": "Product",
      "blocks": [
        {
          "type": "vendor",
          "name": "Vendor",
          "limit": 1
        },
        {
          "type": "title",
          "name": "Title",
          "limit": 1
        },
        {
          "type": "price",
          "name": "Price",
          "limit": 1
        },
        {
          "type": "variants",
          "name": "Product variants picker",
          "limit": 1
        }, {
          "type": "quantity",
          "name": "Quantity",
          "limit": 1
        }, {
          "type": "description",
          "name": "Description",
          "limit": 1
        }, {
          "type": "add_to_cart",
          "name": "Add to cart",
          "limit": 1
        }
      ]
    }
  {% endschema %}